// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Data.Migrations
{
    [DbContext(typeof(ApiNotasContext))]
    partial class ApiNotasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DesAccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuditoriasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HashGenerado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("HiloRespuestaNotId")
                        .HasColumnType("int");

                    b.Property<int>("IdAuditoriaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespuestaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdNotificacionFk")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNotsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriasId");

                    b.HasIndex("HiloRespuestaNotId");

                    b.HasIndex("TipoNotsId");

                    b.ToTable("BlockChains");
                });

            modelBuilder.Entity("Core.Entities.EstadoNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadoNotificacions");
                });

            modelBuilder.Entity("Core.Entities.Formatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombtreFormatos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Formatos");
                });

            modelBuilder.Entity("Core.Entities.GenericosvsSubmodulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPermisosFk")
                        .HasColumnType("int");

                    b.Property<int>("IdRolFk")
                        .HasColumnType("int");

                    b.Property<int>("IdSubModulos")
                        .HasColumnType("int");

                    b.Property<int?>("MaestrosvsSubmodulosId")
                        .HasColumnType("int");

                    b.Property<int?>("PermisosGenerId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaestrosvsSubmodulosId");

                    b.HasIndex("PermisosGenerId");

                    b.HasIndex("RolesId");

                    b.ToTable("genericosvsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.HiloRespuestaNotificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombretipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HiloRespuetasNot");
                });

            modelBuilder.Entity("Core.Entities.MaestrosvsSubmodulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IsSubModulo")
                        .HasColumnType("int");

                    b.Property<int?>("MaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("subModulosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaestrosId");

                    b.HasIndex("subModulosId");

                    b.ToTable("MaestrosvsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.ModuloNotificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EstadoNotId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FormatosId")
                        .HasColumnType("int");

                    b.Property<int?>("HiloRespuestaNotId")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoNotificacionFk")
                        .HasColumnType("int");

                    b.Property<int>("IdFormatoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespuestaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdNotificacionFk")
                        .HasColumnType("int");

                    b.Property<int>("IdRadicado")
                        .HasColumnType("int");

                    b.Property<int>("IdRequerimiento")
                        .HasColumnType("int");

                    b.Property<int?>("RadicadosId")
                        .HasColumnType("int");

                    b.Property<string>("TextoNotificacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoNotificacioneId")
                        .HasColumnType("int");

                    b.Property<int?>("TpRequerimientoId")
                        .HasColumnType("int");

                    b.Property<string>("asuntoNotificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstadoNotId");

                    b.HasIndex("FormatosId");

                    b.HasIndex("HiloRespuestaNotId");

                    b.HasIndex("RadicadosId");

                    b.HasIndex("TipoNotificacioneId");

                    b.HasIndex("TpRequerimientoId");

                    b.ToTable("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.ModulosMaestros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreModulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ModulosMaestros");
                });

            modelBuilder.Entity("Core.Entities.PermisosGenericos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombrePermiso")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PermisosGenericos");
                });

            modelBuilder.Entity("Core.Entities.Radicado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Radicados");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaestroFk")
                        .HasColumnType("int");

                    b.Property<int>("IdRolFk")
                        .HasColumnType("int");

                    b.Property<int?>("MaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("rolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaestrosId");

                    b.HasIndex("rolesId");

                    b.ToTable("RolvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.SubModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreSubmodulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SubModulos");
                });

            modelBuilder.Entity("Core.Entities.TipoNotificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.TipoRequerimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoRequerimientos");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.HasOne("Core.Entities.Auditoria", "Auditorias")
                        .WithMany()
                        .HasForeignKey("AuditoriasId");

                    b.HasOne("Core.Entities.HiloRespuestaNotificaciones", "HiloRespuestaNot")
                        .WithMany()
                        .HasForeignKey("HiloRespuestaNotId");

                    b.HasOne("Core.Entities.TipoNotificaciones", "TipoNots")
                        .WithMany()
                        .HasForeignKey("TipoNotsId");

                    b.Navigation("Auditorias");

                    b.Navigation("HiloRespuestaNot");

                    b.Navigation("TipoNots");
                });

            modelBuilder.Entity("Core.Entities.GenericosvsSubmodulos", b =>
                {
                    b.HasOne("Core.Entities.MaestrosvsSubmodulos", "MaestrosvsSubmodulos")
                        .WithMany()
                        .HasForeignKey("MaestrosvsSubmodulosId");

                    b.HasOne("Core.Entities.PermisosGenericos", "PermisosGener")
                        .WithMany()
                        .HasForeignKey("PermisosGenerId");

                    b.HasOne("Core.Entities.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("MaestrosvsSubmodulos");

                    b.Navigation("PermisosGener");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Entities.MaestrosvsSubmodulos", b =>
                {
                    b.HasOne("Core.Entities.ModulosMaestros", "Maestros")
                        .WithMany()
                        .HasForeignKey("MaestrosId");

                    b.HasOne("Core.Entities.SubModulos", "subModulos")
                        .WithMany()
                        .HasForeignKey("subModulosId");

                    b.Navigation("Maestros");

                    b.Navigation("subModulos");
                });

            modelBuilder.Entity("Core.Entities.ModuloNotificaciones", b =>
                {
                    b.HasOne("Core.Entities.EstadoNotificacion", "EstadoNot")
                        .WithMany()
                        .HasForeignKey("EstadoNotId");

                    b.HasOne("Core.Entities.Formatos", "Formatos")
                        .WithMany()
                        .HasForeignKey("FormatosId");

                    b.HasOne("Core.Entities.HiloRespuestaNotificaciones", "HiloRespuestaNot")
                        .WithMany()
                        .HasForeignKey("HiloRespuestaNotId");

                    b.HasOne("Core.Entities.Radicado", "Radicados")
                        .WithMany()
                        .HasForeignKey("RadicadosId");

                    b.HasOne("Core.Entities.TipoNotificaciones", "TipoNotificacione")
                        .WithMany()
                        .HasForeignKey("TipoNotificacioneId");

                    b.HasOne("Core.Entities.TipoRequerimiento", "TpRequerimiento")
                        .WithMany()
                        .HasForeignKey("TpRequerimientoId");

                    b.Navigation("EstadoNot");

                    b.Navigation("Formatos");

                    b.Navigation("HiloRespuestaNot");

                    b.Navigation("Radicados");

                    b.Navigation("TipoNotificacione");

                    b.Navigation("TpRequerimiento");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.HasOne("Core.Entities.ModulosMaestros", "Maestros")
                        .WithMany()
                        .HasForeignKey("MaestrosId");

                    b.HasOne("Core.Entities.Rol", "roles")
                        .WithMany()
                        .HasForeignKey("rolesId");

                    b.Navigation("Maestros");

                    b.Navigation("roles");
                });
#pragma warning restore 612, 618
        }
    }
}
